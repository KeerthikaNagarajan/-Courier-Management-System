use courierdb;
-- 14. Find the total number of couriers handled by each employee
SELECT e.Name, COUNT(ca.CourierID) AS TotalNoOf_Couriers
FROM Employee e
JOIN CourierAssignment ca ON e.EmployeeID = ca.EmployeeID
JOIN Courier c ON ca.CourierID = c.CourierID
GROUP BY e.EmployeeID, e.Name;


-- 15. Calculate the total revenue generated by each location
SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS Total_Revenue
FROM Payment p 
JOIN Location l ON p.LocationID = l.LocationID
GROUP BY l.LocationID, l.LocationName;

-- 16. Find the total number of couriers delivered to each location
SELECT l.LocationID, l.LocationName, COUNT(c.CourierID) AS Total_Delivered
FROM Location l 
JOIN Courier c ON l.LocationID = c.DestinationLocationID
WHERE c.Status = 'Delivered'
GROUP BY l.LocationID, l.LocationName;

-- 17. Find the courier with the highest average delivery time
SELECT c.CourierID, 
       AVG(DATEDIFF(c.DeliveryDate, p.PaymentDate)) AS AvgDeliveryTime
FROM Courier c 
JOIN Payment p ON c.CourierID = p.CourierID
GROUP BY c.CourierID
ORDER BY AvgDeliveryTime DESC 
LIMIT 1;

-- 18. Find locations with total payments less than a certain amount (<3000)
SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS Total_Revenue
FROM Payment p 
JOIN Location l ON p.LocationID = l.LocationID
GROUP BY l.LocationID, l.LocationName 
HAVING Total_Revenue < 3000;

-- 19. Calculate total payments per location
SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS Total_Payments
FROM Payment p 
JOIN Location l ON p.LocationID = l.LocationID
GROUP BY l.LocationID, l.LocationName;

-- 20. Retrieve couriers who received payments totaling more than $1000 in a specific location (LocationID = 4)
SELECT p.CourierID, SUM(p.Amount) AS TotalPayment
FROM Payment p 
WHERE p.LocationID = 4
GROUP BY p.CourierID 
HAVING SUM(p.Amount) > 1000;

-- 21. Retrieve couriers who received payments totaling more than $1000 after a certain date ('2025-02-20')
SELECT CourierID, SUM(Amount) AS Total_Payment
FROM Payment 
WHERE PaymentDate > '2025-02-20'
GROUP BY CourierID 
HAVING SUM(Amount) > 1000;

-- 22. Retrieve locations where total amount received is more than $5000 before a certain date ('2025-02-20')
SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS Total_Payment
FROM Payment p 
JOIN Location l ON p.LocationID = l.LocationID
WHERE p.PaymentDate < '2025-02-20'
GROUP BY l.LocationID, l.LocationName 
HAVING Total_Payment > 5000;
